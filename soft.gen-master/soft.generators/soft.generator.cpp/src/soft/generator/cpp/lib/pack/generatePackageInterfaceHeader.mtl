[**
 * This file is part of soft.generator.cpp, a project for cpp code 
 * generation of an ecore model
 *
 * Copyright(c) 2021 MASA Group
 *	
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
**/]

[comment encoding = UTF-8 /]
[module generatePackageInterfaceHeader('http://www.eclipse.org/emf/2002/Ecore')]
 
[import soft::generator::common::generateUtils /]

[import soft::generator::cpp::generateCommon /]
[import soft::generator::cpp::generateSingleton /]
[import soft::generator::cpp::lib::generateClass/]
[import soft::generator::cpp::lib::generateCommon /]
[import soft::generator::cpp::lib::generateDataType /]
[import soft::generator::cpp::lib::pack::generateElement /]
[import soft::generator::common::generateCommon /]

[template public generatePackageInterfaceHeader(anEPackage : EPackage) { className : String = anEPackage.getInterfaceName() ; namespaceName : String = anEPackage.getInterfaceNamespaceName(); }]
[file (anEPackage.getOutputDirectory() + '/src-gen/' + anEPackage.getInterfaceFolder() + '/' + className +'.hpp', false, 'UTF-8')]
[fileComment()/]
[startGuard(anEPackage,'Package')/]

#include "ecore/EPackage.hpp"
#include "[anEPackage.getInterfaceFolder()/]/Exports.hpp"

namespace ecore 
{
    class EAttribute;
    class EClass;
    class EDataType;
    class EEnum;
    class EReference;
}

[comment namespace /]
namespace [anEPackage.name/] 
{
    /*!
    The Metamodel Package for the [anEPackage.name/] metamodel. This package is used to enable the reflection of model elements. 
    It contains all model elements which were described in an ecore file.
    */
    class [anEPackage.name.toUpper()/]_API [className/] : public [getShortQualifiedName('ecore::EPackage',namespaceName)/] 
    {
    [generateSingletonDeclaration(className)/]
   
        /** 
         * The package name.
         */
        static const std::string eNAME;
        
        /** 
         * The package namespace URI.
         */
        static const std::string eNS_URI;

        /**
         * The package namespace name.
         */
        static const std::string eNS_PREFIX;

[for (aClass : EClass | anEPackage.getOrderedClasses())]
        [aClass.generateStaticClassID()/]
        [aClass.eAllStructuralFeatures.generateStaticFeatureID(aClass)/]
        [aClass.generateStaticFeatureCountID()/]
        [aClass.eAllOperations.generateStaticOperationID(aClass)/]
        [aClass.generateStaticOperationCountID()/]
[/for]
        [anEPackage.eAllContents(EDataType)->sortedBy(name).generateStaticDataTypeID()/]

        /**
         * Destructor
         */ 
        virtual ~[className/]() = default;

[for (aClass : EClass | anEPackage.eAllContents(EClass)->asOrderedSet()->sortedBy(name)) separator ('\r\n')]
        [aClass.generateGetterDeclaration(anEPackage, false)/]
        [aClass.eAttributes->sortedBy(name).generateGetterDeclaration(anEPackage, false)/]
        [aClass.eReferences->sortedBy(name).generateGetterDeclaration(anEPackage, false)/]
        [aClass.eOperations->sortedBy(name).generateGetterDeclaration(anEPackage, false)/]
[/for]
        [anEPackage.eAllContents(EDataType)->sortedBy(name).generateGetterDeclaration(anEPackage, false)/]

    
    };
}
[endGuard(anEPackage,'Package')/]
[/file]
[/template]
