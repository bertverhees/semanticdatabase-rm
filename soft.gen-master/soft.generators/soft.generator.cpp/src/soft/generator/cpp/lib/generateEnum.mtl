[**
 * This file is part of soft.generator.cpp, a project for cpp code 
 * generation of an ecore model
 *
 * Copyright(c) 2021 MASA Group
 *	
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
**/]

[comment encoding = UTF-8 /]
[module generateEnum('http://www.eclipse.org/emf/2002/Ecore')/]

[import soft::generator::common::generateCommon/]
[import soft::generator::cpp::generateCommon/]
[import soft::generator::cpp::lib::generateCommon/]


[template public generateEnum(aEEnum : EEnum) { 
    enumName : String = aEEnum.name; 
    enumNamespace : String = aEEnum.ePackage.getInterfaceNamespaceName();
    varName : String = enumName.toLowerFirst(); 
    literals : OrderedSet(EEnumLiteral) = aEEnum.eLiterals->asOrderedSet()->sortedBy(name); }]
[file (aEEnum.ePackage.getOutputDirectory() + '/src-gen/' + aEEnum.ePackage.getInterfaceFolder() + '/' + enumName +'.hpp', false, 'UTF-8')]
[fileComment()/]
[startGuard(aEEnum)/]

namespace [enumNamespace/] 
{
    enum class [enumName/] : unsigned char {
[for (lit : EEnumLiteral | literals)]
        [lit.name.toUpperCase()/] = [lit.value.toString()/],
[/for]
    };

    template <typename C, typename T>
    std::basic_ostream<C, T>& operator<<( std::basic_ostream<C, T>& os, [enumName/] [varName/] ) {
        switch( [varName/] )
        {
[for (lit : EEnumLiteral | literals)]
        case [enumName/]::[lit.name.toUpperCase()/]:
            return os << "[lit.name/]";
[/for]
        default:
            return os;
        }
    }

    template <typename C, typename T>
    std::basic_istream<C, T>& operator>>( std::basic_istream<C, T>& is, [enumName/]& [varName/] ) {
        std::string s;
        is >> s;
[for (lit : EEnumLiteral | literals)]
        [if lit <> literals->first()]else [/if]if ( s == "[lit.name/]" )
            [varName/] = [enumName/]::[lit.name.toUpperCase()/];
[/for]
        return is;  
    }
}

[endGuard(aEEnum)/]
[/file]
[/template]

