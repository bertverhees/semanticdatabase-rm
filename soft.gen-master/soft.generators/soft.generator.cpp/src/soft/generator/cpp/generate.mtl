[**
 * This file is part of soft.generators, a project for cpp code 
 * generation of an ecore model
 *
 * Copyright(c) 2021 MASA Group
 *	
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
**/]

[comment encoding = UTF-8 /]
[module generate('http://www.eclipse.org/emf/2002/Ecore')/]


[import soft::generator::cpp::lib::generateCMake/]
[import soft::generator::cpp::lib::generateEnum/]
[import soft::generator::cpp::lib::generateExports/]
[import soft::generator::cpp::lib::cls::generateBaseHeader/]
[import soft::generator::cpp::lib::cls::generateBaseSource/]
[import soft::generator::cpp::lib::cls::generateImplementation]
[import soft::generator::cpp::lib::cls::generateInternal/]
[import soft::generator::cpp::lib::cls::generateInterface/]
[import soft::generator::cpp::lib::factory::generateFactoryBaseHeader/]
[import soft::generator::cpp::lib::factory::generateFactoryBaseSource /]
[import soft::generator::cpp::lib::factory::generateFactoryInterfaceHeader /]
[import soft::generator::cpp::lib::factory::generateFactoryInterfaceSource /]
[import soft::generator::cpp::lib::factory::generateFactoryImplementationHeader /]
[import soft::generator::cpp::lib::pack::generatePackageBaseHeader/]
[import soft::generator::cpp::lib::pack::generatePackageBaseSource/]
[import soft::generator::cpp::lib::pack::generatePackageInterfaceHeader /]
[import soft::generator::cpp::lib::pack::generatePackageInterfaceSource /]
[import soft::generator::cpp::lib::pack::generatePackageImplementationHeader /]
[import soft::generator::cpp::tests::generateMock/]
[import soft::generator::cpp::tests::generateCMake/]

[template public generateModel(aPackage : EPackage)]
[comment @main/]
[aPackage.generateExports()/]
[comment class generation/]
[for (aClass : EClass | aPackage.eAllContents(EClass))]
    [aClass.generateInterface()/]
	[if not aClass.interface]
    	[aClass.generateBaseHeader()/]
        [aClass.generateBaseSource()/]
        [aClass.generateInternal()/]
        [aClass.generateImplementation()/]
	[/if]
[/for]
[for (anEEnum : EEnum | aPackage.eAllContents(EEnum))]
    [anEEnum.generateEnum()/]
[/for]
[comment factory generation/]
[aPackage.generateFactoryInterfaceHeader()/]
[aPackage.generateFactoryInterfaceSource()/]
[aPackage.generateFactoryBaseHeader()/]
[aPackage.generateFactoryBaseSource()/]
[aPackage.generateFactoryImplementationHeader()/]

[comment package generation/]
[aPackage.generatePackageInterfaceHeader()/]
[aPackage.generatePackageInterfaceSource()/]
[aPackage.generatePackageBaseHeader()/]
[aPackage.generatePackageBaseSource()/]
[aPackage.generatePackageImplementationHeader()/]
[/template]

[template public generateLibraryCMakeSources(aPackage : EPackage)]
[comment @main/]
[aPackage.generateLibraryCMakeFiles()/]
[/template]

[template public generateLibraryCMakeProject(aPackage : EPackage)]
[comment @main/]
[aPackage.generateLibraryCMakeLists()/]
[/template]

[template public generateTests(aPackage: EPackage)]
[comment @main/]
[for (aClass : EClass | aPackage.eAllContents(EClass))]
    [aClass.generateMock()/]
[/for]
[/template]

[template public generateTestsCMakeSources(aPackage : EPackage)]
[comment @main/]
[aPackage.generateTestsCMakeFiles()/]
[/template]

[template public generateTestsCMakeProject(aPackage : EPackage)]
[comment @main/]
[aPackage.generateTestsCMakeLists()/]
[/template]

[template public generateTestsCMakeDependencies(aPackage : EPackage)]
[comment @main/]
[/template]
