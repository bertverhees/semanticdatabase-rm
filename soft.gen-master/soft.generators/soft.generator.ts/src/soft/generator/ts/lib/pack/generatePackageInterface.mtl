[**
 * This file is part of soft.generator.ts, a project for typescript 
 * code generation of an ecore model
 *
 * Copyright(c) 2021 MASA Group
 *	
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
**/]

[comment encoding = UTF-8 /]
[module generatePackageInterface('http://www.eclipse.org/emf/2002/Ecore')/]

[import soft::generator::common::generateCommon/]
[import soft::generator::common::generateUtils/]
[import soft::generator::ts::generateCommon /]
[import soft::generator::ts::generateType /]
[import soft::generator::ts::lib::pack::generateCommon/]

[template private generateGetter(anENamedElement : ENamedElement, aPackage : EPackage )]

// Returns the meta object for the [anENamedElement.name.toUpperFirst()/]
[anENamedElement.getReflectiveGetterName()/]() : [getShortQualifiedName(anENamedElement.eClass().getQualifiedInterfaceName(),aPackage.name)/];
[/template]

[template public generatePackageInterface(aPackage : EPackage) {className : String = aPackage.getInterfaceName();}]
[file (aPackage.getOutputDirectory() + '/'+  aPackage.getInterfaceFileName(aPackage.getPackageName() ) , false, 'UTF-8')]
[fileComment()/]

[let allTypes : OrderedSet(String) = OrderedSet{'ecore.EAttribute' 
                                               ,'ecore.EReference'
                                               ,'ecore.EClass'
                                               ,'ecore.EEnum'
                                               ,'ecore.EOperation' 
                                               ,'ecore.EDataType'
                                               ,'ecore.EPackage' 
                                               , aPackage.name + '.' + aPackage.getImplementationName()}->sortedBy(s | s)]
[aPackage.generateImports(allTypes,className)/]
[/let]

export interface [className/] extends [if not aPackage.isEcorePackage()]ecore.[/if]EPackage {
[for (aClass : EClass | aPackage.eAllContents(EClass)->asOrderedSet()->sortedBy(name))]
    [aClass.generateGetter(aPackage)/]
    [aClass.eAttributes->sortedBy(name).generateGetter(aPackage)/]
    [aClass.eReferences->sortedBy(name).generateGetter(aPackage)/]
    [aClass.eOperations->sortedBy(name).generateGetter(aPackage)/]
[/for]
    [aPackage.eAllContents(EDataType)->sortedBy(name).generateGetter(aPackage)/]
}

export function get[className/]() : [className/] {
    return [aPackage.getImplementationName()/].getInstance();
}


[/file]
[/template]
