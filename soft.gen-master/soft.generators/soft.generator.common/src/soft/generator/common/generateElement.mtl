[**
 * This file is part of soft.generators, a project for code 
 * generation of an ecore model
 *
 * Copyright(c) 2021 MASA Group
 *	
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
**/]

[comment encoding = UTF-8 /]
[module generateElement('http://www.eclipse.org/emf/2002/Ecore')]

[import soft::generator::common::generateCommon/]

[query public getImplementedOperations( aClass : EClass ) : Set(EOperation) = 
	let classExtend : EClass = aClass.getClassExtendsClass() in
	if classExtend.oclIsUndefined() then 
		aClass.eAllOperations 
	else 
		aClass.eAllOperations - classExtend.eAllOperations 
	endif
/]

[query public getImplementedFeatures( aClass : EClass ) : Set(EStructuralFeature) =
	let classExtend : EClass = aClass.getClassExtendsClass() in
	if classExtend.oclIsUndefined() then 
		aClass.eAllStructuralFeatures 
	else 
		aClass.eAllStructuralFeatures - classExtend.eAllStructuralFeatures 
	endif
 /]

[query public getReferencedTypes(aOperation : EOperation) : Set(EClassifier) =
    if aOperation.eGenericType.oclIsUndefined() then
        OrderedSet {
            OrderedSet { aOperation.eType },
            aOperation.eParameters.eType
        }->flatten()
    else
        OrderedSet {
            OrderedSet { aOperation.eType , aOperation.eGenericType.eClassifier },
            aOperation.eParameters.eType
        }->flatten()
    endif  
/]

[query public requiresList(anEClassifier : EClassifier) : Boolean = if (oclIsUndefined()) then false else name = 'EEList' endif/]
[query public requiresList(aClass : EClass) : Boolean = aClass.getImplementedFeatures()->exists(isListType()) or aClass.getImplementedOperations()->exists((eType.requiresList()  or isListType())) /]
[query public requiresMap(anEClassifier : EClassifier) : Boolean = if (oclIsUndefined()) then false else name = 'EMap' endif/]
[query public requiresMap(aClass : EClass) : Boolean = aClass.getImplementedFeatures()->exists(isMapType()) or aClass.getImplementedOperations()->exists((eType.requiresMap()  or isMapType())) /]
[query public requiresCollectionView(anEClassifier : EClassifier) : Boolean = if (oclIsUndefined()) then false else name = 'ETreeIterator' endif/]
[query public requiresCollectionView(anGenericType : EGenericType) : Boolean = if (oclIsUndefined()) then false else anGenericType.eClassifier.requiresCollectionView() endif/]
[query public requiresResource(anEClassifier : EClassifier) : Boolean = if (oclIsUndefined()) then false else name = 'EResource' endif/]
[query public requiresResource(anGenericType : EGenericType) : Boolean = if (oclIsUndefined()) then false else anGenericType.eClassifier.requiresResource() endif/]



