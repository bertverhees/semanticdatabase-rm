// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

// *****************************************************************************
// Copyright(c) 2021 MASA Group
//
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.
//
// *****************************************************************************

package ecore

import mock "github.com/stretchr/testify/mock"

// MockEPackageRegistry is an autogenerated mock type for the EPackageRegistry type
type MockEPackageRegistry struct {
	mock.Mock
}

// GetFactory provides a mock function with given fields: nsURI
func (_m *MockEPackageRegistry) GetFactory(nsURI string) EFactory {
	ret := _m.Called(nsURI)

	var r0 EFactory
	if rf, ok := ret.Get(0).(func(string) EFactory); ok {
		r0 = rf(nsURI)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(EFactory)
		}
	}

	return r0
}

// GetPackage provides a mock function with given fields: nsURI
func (_m *MockEPackageRegistry) GetPackage(nsURI string) EPackage {
	ret := _m.Called(nsURI)

	var r0 EPackage
	if rf, ok := ret.Get(0).(func(string) EPackage); ok {
		r0 = rf(nsURI)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(EPackage)
		}
	}

	return r0
}

// PutPackage provides a mock function with given fields: nsURI, pack
func (_m *MockEPackageRegistry) PutPackage(nsURI string, pack EPackage) {
	_m.Called(nsURI, pack)
}

// PutSupplier provides a mock function with given fields: nsURI, supplier
func (_m *MockEPackageRegistry) PutSupplier(nsURI string, supplier func() EPackage) {
	_m.Called(nsURI, supplier)
}

// RegisterPackage provides a mock function with given fields: pack
func (_m *MockEPackageRegistry) RegisterPackage(pack EPackage) {
	_m.Called(pack)
}

// Remove provides a mock function with given fields: nsURI
func (_m *MockEPackageRegistry) Remove(nsURI string) {
	_m.Called(nsURI)
}

// UnregisterPackage provides a mock function with given fields: pack
func (_m *MockEPackageRegistry) UnregisterPackage(pack EPackage) {
	_m.Called(pack)
}
