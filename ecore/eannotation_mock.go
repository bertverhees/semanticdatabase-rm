// Code generated by soft.generator.go. DO NOT EDIT.

// *****************************************************************************
// Copyright(c) 2021 MASA Group
//
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.
//
// *****************************************************************************

package ecore

type MockEAnnotation struct {
	MockEModelElement
}

// GetContents get the value of contents
func (eAnnotation *MockEAnnotation) GetContents() EList {
	ret := eAnnotation.Called()

	var r EList
	if rf, ok := ret.Get(0).(func() EList); ok {
		r = rf()
	} else {
		if ret.Get(0) != nil {
			r = ret.Get(0).(EList)
		}
	}

	return r
}

// GetDetails get the value of details
func (eAnnotation *MockEAnnotation) GetDetails() EMap {
	ret := eAnnotation.Called()

	var r EMap
	if rf, ok := ret.Get(0).(func() EMap); ok {
		r = rf()
	} else {
		if ret.Get(0) != nil {
			r = ret.Get(0).(EMap)
		}
	}

	return r
}

// GetEModelElement get the value of eModelElement
func (eAnnotation *MockEAnnotation) GetEModelElement() EModelElement {
	ret := eAnnotation.Called()

	var r EModelElement
	if rf, ok := ret.Get(0).(func() EModelElement); ok {
		r = rf()
	} else {
		if ret.Get(0) != nil {
			r = ret.Get(0).(EModelElement)
		}
	}

	return r
}

// SetEModelElement provides mock implementation for setting the value of eModelElement
func (eAnnotation *MockEAnnotation) SetEModelElement(newEModelElement EModelElement) {
	eAnnotation.Called(newEModelElement)
}

// GetReferences get the value of references
func (eAnnotation *MockEAnnotation) GetReferences() EList {
	ret := eAnnotation.Called()

	var r EList
	if rf, ok := ret.Get(0).(func() EList); ok {
		r = rf()
	} else {
		if ret.Get(0) != nil {
			r = ret.Get(0).(EList)
		}
	}

	return r
}

// GetSource get the value of source
func (eAnnotation *MockEAnnotation) GetSource() string {
	ret := eAnnotation.Called()

	var r string
	if rf, ok := ret.Get(0).(func() string); ok {
		r = rf()
	} else {
		if ret.Get(0) != nil {
			r = ret.Get(0).(string)
		}
	}

	return r
}

// SetSource provides mock implementation for setting the value of source
func (eAnnotation *MockEAnnotation) SetSource(newSource string) {
	eAnnotation.Called(newSource)
}
