// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package ecore

import (
	mock "github.com/stretchr/testify/mock"
	io "io"
)

// MockEURIHandler is an autogenerated mock type for the EURIHandler type
type MockEURIHandler struct {
	mock.Mock
}

// CanHandle provides a mock function with given fields: uri
func (_m *MockEURIHandler) CanHandle(uri *URI) bool {
	ret := _m.Called(uri)

	var r0 bool
	if rf, ok := ret.Get(0).(func(*URI) bool); ok {
		r0 = rf(uri)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// CreateReader provides a mock function with given fields: uri
func (_m *MockEURIHandler) CreateReader(uri *URI) (io.ReadCloser, error) {
	ret := _m.Called(uri)

	var r0 io.ReadCloser
	var r1 error
	if rf, ok := ret.Get(0).(func(*URI) (io.ReadCloser, error)); ok {
		r0, r1 = rf(uri)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(io.ReadCloser)
		}
		r1 = ret.Error(1)
	}
	return r0, r1
}

// CreateWriter provides a mock function with given fields: uri
func (_m *MockEURIHandler) CreateWriter(uri *URI) (io.WriteCloser, error) {
	ret := _m.Called(uri)

	var r0 io.WriteCloser
	var r1 error
	if rf, ok := ret.Get(0).(func(*URI) (io.WriteCloser, error)); ok {
		r0, r1 = rf(uri)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(io.WriteCloser)
		}
		r1 = ret.Error(1)
	}
	return r0, r1
}
