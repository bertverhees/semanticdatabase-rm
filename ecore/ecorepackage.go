// Code generated by soft.generator.go. DO NOT EDIT.

// *****************************************************************************
// Copyright(c) 2021 MASA Group
//
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.
//
// *****************************************************************************

package ecore

const (
	// NAME is the package name.
	NAME = "ecore"

	// NS_URI is the package URI.
	NS_URI = "http://www.eclipse.org/emf/2002/Ecore"

	// NS_PREFIX is the package prefix.
	NS_PREFIX = "ecore"

	// EMODEL_ELEMENT is the meta object id for the class EModelElement.
	EMODEL_ELEMENT = 8

	// EMODEL_ELEMENT__EANNOTATIONS is the feature id for the EModelElement 'EAnnotations' containment reference list.
	EMODEL_ELEMENT__EANNOTATIONS = 0

	// EMODEL_ELEMENT_FEATURE_COUNT is the number of structural features of the class EModelElement.
	EMODEL_ELEMENT_FEATURE_COUNT = 1

	// EMODEL_ELEMENT__GET_EANNOTATION_ESTRING is the operation id for the 'getEAnnotation' operation.
	EMODEL_ELEMENT__GET_EANNOTATION_ESTRING = 0

	// EMODEL_ELEMENT_OPERATION_COUNT is the number of EMODEL_ELEMENT_OPERATION_COUNT
	EMODEL_ELEMENT_OPERATION_COUNT = 1

	// ENAMED_ELEMENT is the meta object id for the class ENamedElement.
	ENAMED_ELEMENT = 9

	// ENAMED_ELEMENT__EANNOTATIONS is the feature id for the ENamedElement 'EAnnotations' containment reference list.
	ENAMED_ELEMENT__EANNOTATIONS = EMODEL_ELEMENT__EANNOTATIONS

	// ENAMED_ELEMENT__NAME is the feature id for the ENamedElement 'Name' attribute.
	ENAMED_ELEMENT__NAME = EMODEL_ELEMENT_FEATURE_COUNT + 0

	// ENAMED_ELEMENT_FEATURE_COUNT is the number of structural features of the class ENamedElement.
	ENAMED_ELEMENT_FEATURE_COUNT = EMODEL_ELEMENT_FEATURE_COUNT + 1

	// ENAMED_ELEMENT__GET_EANNOTATION_ESTRING is the operation id for the 'getEAnnotation' operation.
	ENAMED_ELEMENT__GET_EANNOTATION_ESTRING = EMODEL_ELEMENT__GET_EANNOTATION_ESTRING

	// ENAMED_ELEMENT_OPERATION_COUNT is the number of ENAMED_ELEMENT_OPERATION_COUNT
	ENAMED_ELEMENT_OPERATION_COUNT = EMODEL_ELEMENT_OPERATION_COUNT + 0

	// ETYPED_ELEMENT is the meta object id for the class ETypedElement.
	ETYPED_ELEMENT = 16

	// ETYPED_ELEMENT__EANNOTATIONS is the feature id for the ETypedElement 'EAnnotations' containment reference list.
	ETYPED_ELEMENT__EANNOTATIONS = ENAMED_ELEMENT__EANNOTATIONS

	// ETYPED_ELEMENT__NAME is the feature id for the ETypedElement 'Name' attribute.
	ETYPED_ELEMENT__NAME = ENAMED_ELEMENT__NAME

	// ETYPED_ELEMENT__ORDERED is the feature id for the ETypedElement 'Ordered' attribute.
	ETYPED_ELEMENT__ORDERED = ENAMED_ELEMENT_FEATURE_COUNT + 0

	// ETYPED_ELEMENT__UNIQUE is the feature id for the ETypedElement 'Unique' attribute.
	ETYPED_ELEMENT__UNIQUE = ENAMED_ELEMENT_FEATURE_COUNT + 1

	// ETYPED_ELEMENT__LOWER_BOUND is the feature id for the ETypedElement 'LowerBound' attribute.
	ETYPED_ELEMENT__LOWER_BOUND = ENAMED_ELEMENT_FEATURE_COUNT + 2

	// ETYPED_ELEMENT__UPPER_BOUND is the feature id for the ETypedElement 'UpperBound' attribute.
	ETYPED_ELEMENT__UPPER_BOUND = ENAMED_ELEMENT_FEATURE_COUNT + 3

	// ETYPED_ELEMENT__MANY is the feature id for the ETypedElement 'Many' attribute.
	ETYPED_ELEMENT__MANY = ENAMED_ELEMENT_FEATURE_COUNT + 4

	// ETYPED_ELEMENT__REQUIRED is the feature id for the ETypedElement 'Required' attribute.
	ETYPED_ELEMENT__REQUIRED = ENAMED_ELEMENT_FEATURE_COUNT + 5

	// ETYPED_ELEMENT__ETYPE is the feature id for the ETypedElement 'EType' reference.
	ETYPED_ELEMENT__ETYPE = ENAMED_ELEMENT_FEATURE_COUNT + 6

	// ETYPED_ELEMENT_FEATURE_COUNT is the number of structural features of the class ETypedElement.
	ETYPED_ELEMENT_FEATURE_COUNT = ENAMED_ELEMENT_FEATURE_COUNT + 7

	// ETYPED_ELEMENT__GET_EANNOTATION_ESTRING is the operation id for the 'getEAnnotation' operation.
	ETYPED_ELEMENT__GET_EANNOTATION_ESTRING = ENAMED_ELEMENT__GET_EANNOTATION_ESTRING

	// ETYPED_ELEMENT_OPERATION_COUNT is the number of ETYPED_ELEMENT_OPERATION_COUNT
	ETYPED_ELEMENT_OPERATION_COUNT = ENAMED_ELEMENT_OPERATION_COUNT + 0

	// ESTRUCTURAL_FEATURE is the meta object id for the class EStructuralFeature.
	ESTRUCTURAL_FEATURE = 15

	// ESTRUCTURAL_FEATURE__EANNOTATIONS is the feature id for the EStructuralFeature 'EAnnotations' containment reference list.
	ESTRUCTURAL_FEATURE__EANNOTATIONS = ETYPED_ELEMENT__EANNOTATIONS

	// ESTRUCTURAL_FEATURE__NAME is the feature id for the EStructuralFeature 'Name' attribute.
	ESTRUCTURAL_FEATURE__NAME = ETYPED_ELEMENT__NAME

	// ESTRUCTURAL_FEATURE__ORDERED is the feature id for the EStructuralFeature 'Ordered' attribute.
	ESTRUCTURAL_FEATURE__ORDERED = ETYPED_ELEMENT__ORDERED

	// ESTRUCTURAL_FEATURE__UNIQUE is the feature id for the EStructuralFeature 'Unique' attribute.
	ESTRUCTURAL_FEATURE__UNIQUE = ETYPED_ELEMENT__UNIQUE

	// ESTRUCTURAL_FEATURE__LOWER_BOUND is the feature id for the EStructuralFeature 'LowerBound' attribute.
	ESTRUCTURAL_FEATURE__LOWER_BOUND = ETYPED_ELEMENT__LOWER_BOUND

	// ESTRUCTURAL_FEATURE__UPPER_BOUND is the feature id for the EStructuralFeature 'UpperBound' attribute.
	ESTRUCTURAL_FEATURE__UPPER_BOUND = ETYPED_ELEMENT__UPPER_BOUND

	// ESTRUCTURAL_FEATURE__MANY is the feature id for the EStructuralFeature 'Many' attribute.
	ESTRUCTURAL_FEATURE__MANY = ETYPED_ELEMENT__MANY

	// ESTRUCTURAL_FEATURE__REQUIRED is the feature id for the EStructuralFeature 'Required' attribute.
	ESTRUCTURAL_FEATURE__REQUIRED = ETYPED_ELEMENT__REQUIRED

	// ESTRUCTURAL_FEATURE__ETYPE is the feature id for the EStructuralFeature 'EType' reference.
	ESTRUCTURAL_FEATURE__ETYPE = ETYPED_ELEMENT__ETYPE

	// ESTRUCTURAL_FEATURE__CHANGEABLE is the feature id for the EStructuralFeature 'Changeable' attribute.
	ESTRUCTURAL_FEATURE__CHANGEABLE = ETYPED_ELEMENT_FEATURE_COUNT + 0

	// ESTRUCTURAL_FEATURE__VOLATILE is the feature id for the EStructuralFeature 'Volatile' attribute.
	ESTRUCTURAL_FEATURE__VOLATILE = ETYPED_ELEMENT_FEATURE_COUNT + 1

	// ESTRUCTURAL_FEATURE__TRANSIENT is the feature id for the EStructuralFeature 'Transient' attribute.
	ESTRUCTURAL_FEATURE__TRANSIENT = ETYPED_ELEMENT_FEATURE_COUNT + 2

	// ESTRUCTURAL_FEATURE__DEFAULT_VALUE_LITERAL is the feature id for the EStructuralFeature 'DefaultValueLiteral' attribute.
	ESTRUCTURAL_FEATURE__DEFAULT_VALUE_LITERAL = ETYPED_ELEMENT_FEATURE_COUNT + 3

	// ESTRUCTURAL_FEATURE__DEFAULT_VALUE is the feature id for the EStructuralFeature 'DefaultValue' attribute.
	ESTRUCTURAL_FEATURE__DEFAULT_VALUE = ETYPED_ELEMENT_FEATURE_COUNT + 4

	// ESTRUCTURAL_FEATURE__UNSETTABLE is the feature id for the EStructuralFeature 'Unsettable' attribute.
	ESTRUCTURAL_FEATURE__UNSETTABLE = ETYPED_ELEMENT_FEATURE_COUNT + 5

	// ESTRUCTURAL_FEATURE__DERIVED is the feature id for the EStructuralFeature 'Derived' attribute.
	ESTRUCTURAL_FEATURE__DERIVED = ETYPED_ELEMENT_FEATURE_COUNT + 6

	// ESTRUCTURAL_FEATURE__ECONTAINING_CLASS is the feature id for the EStructuralFeature 'EContainingClass' container reference.
	ESTRUCTURAL_FEATURE__ECONTAINING_CLASS = ETYPED_ELEMENT_FEATURE_COUNT + 7

	// ESTRUCTURAL_FEATURE__FEATURE_ID is the feature id for the EStructuralFeature 'FeatureID' attribute.
	ESTRUCTURAL_FEATURE__FEATURE_ID = ETYPED_ELEMENT_FEATURE_COUNT + 8

	// ESTRUCTURAL_FEATURE_FEATURE_COUNT is the number of structural features of the class EStructuralFeature.
	ESTRUCTURAL_FEATURE_FEATURE_COUNT = ETYPED_ELEMENT_FEATURE_COUNT + 9

	// ESTRUCTURAL_FEATURE__GET_EANNOTATION_ESTRING is the operation id for the 'getEAnnotation' operation.
	ESTRUCTURAL_FEATURE__GET_EANNOTATION_ESTRING = ETYPED_ELEMENT__GET_EANNOTATION_ESTRING
	// ESTRUCTURAL_FEATURE__GET_CONTAINER_CLASS is the operation id for the 'getContainerClass' operation.
	ESTRUCTURAL_FEATURE__GET_CONTAINER_CLASS = ETYPED_ELEMENT_OPERATION_COUNT + 0

	// ESTRUCTURAL_FEATURE_OPERATION_COUNT is the number of ESTRUCTURAL_FEATURE_OPERATION_COUNT
	ESTRUCTURAL_FEATURE_OPERATION_COUNT = ETYPED_ELEMENT_OPERATION_COUNT + 1

	// EATTRIBUTE is the meta object id for the class EAttribute.
	EATTRIBUTE = 53

	// EATTRIBUTE__EANNOTATIONS is the feature id for the EAttribute 'EAnnotations' containment reference list.
	EATTRIBUTE__EANNOTATIONS = ESTRUCTURAL_FEATURE__EANNOTATIONS

	// EATTRIBUTE__NAME is the feature id for the EAttribute 'Name' attribute.
	EATTRIBUTE__NAME = ESTRUCTURAL_FEATURE__NAME

	// EATTRIBUTE__ORDERED is the feature id for the EAttribute 'Ordered' attribute.
	EATTRIBUTE__ORDERED = ESTRUCTURAL_FEATURE__ORDERED

	// EATTRIBUTE__UNIQUE is the feature id for the EAttribute 'Unique' attribute.
	EATTRIBUTE__UNIQUE = ESTRUCTURAL_FEATURE__UNIQUE

	// EATTRIBUTE__LOWER_BOUND is the feature id for the EAttribute 'LowerBound' attribute.
	EATTRIBUTE__LOWER_BOUND = ESTRUCTURAL_FEATURE__LOWER_BOUND

	// EATTRIBUTE__UPPER_BOUND is the feature id for the EAttribute 'UpperBound' attribute.
	EATTRIBUTE__UPPER_BOUND = ESTRUCTURAL_FEATURE__UPPER_BOUND

	// EATTRIBUTE__MANY is the feature id for the EAttribute 'Many' attribute.
	EATTRIBUTE__MANY = ESTRUCTURAL_FEATURE__MANY

	// EATTRIBUTE__REQUIRED is the feature id for the EAttribute 'Required' attribute.
	EATTRIBUTE__REQUIRED = ESTRUCTURAL_FEATURE__REQUIRED

	// EATTRIBUTE__ETYPE is the feature id for the EAttribute 'EType' reference.
	EATTRIBUTE__ETYPE = ESTRUCTURAL_FEATURE__ETYPE

	// EATTRIBUTE__CHANGEABLE is the feature id for the EAttribute 'Changeable' attribute.
	EATTRIBUTE__CHANGEABLE = ESTRUCTURAL_FEATURE__CHANGEABLE

	// EATTRIBUTE__VOLATILE is the feature id for the EAttribute 'Volatile' attribute.
	EATTRIBUTE__VOLATILE = ESTRUCTURAL_FEATURE__VOLATILE

	// EATTRIBUTE__TRANSIENT is the feature id for the EAttribute 'Transient' attribute.
	EATTRIBUTE__TRANSIENT = ESTRUCTURAL_FEATURE__TRANSIENT

	// EATTRIBUTE__DEFAULT_VALUE_LITERAL is the feature id for the EAttribute 'DefaultValueLiteral' attribute.
	EATTRIBUTE__DEFAULT_VALUE_LITERAL = ESTRUCTURAL_FEATURE__DEFAULT_VALUE_LITERAL

	// EATTRIBUTE__DEFAULT_VALUE is the feature id for the EAttribute 'DefaultValue' attribute.
	EATTRIBUTE__DEFAULT_VALUE = ESTRUCTURAL_FEATURE__DEFAULT_VALUE

	// EATTRIBUTE__UNSETTABLE is the feature id for the EAttribute 'Unsettable' attribute.
	EATTRIBUTE__UNSETTABLE = ESTRUCTURAL_FEATURE__UNSETTABLE

	// EATTRIBUTE__DERIVED is the feature id for the EAttribute 'Derived' attribute.
	EATTRIBUTE__DERIVED = ESTRUCTURAL_FEATURE__DERIVED

	// EATTRIBUTE__ECONTAINING_CLASS is the feature id for the EAttribute 'EContainingClass' container reference.
	EATTRIBUTE__ECONTAINING_CLASS = ESTRUCTURAL_FEATURE__ECONTAINING_CLASS

	// EATTRIBUTE__FEATURE_ID is the feature id for the EAttribute 'FeatureID' attribute.
	EATTRIBUTE__FEATURE_ID = ESTRUCTURAL_FEATURE__FEATURE_ID

	// EATTRIBUTE__ID is the feature id for the EAttribute 'ID' attribute.
	EATTRIBUTE__ID = ESTRUCTURAL_FEATURE_FEATURE_COUNT + 0

	// EATTRIBUTE__EATTRIBUTE_TYPE is the feature id for the EAttribute 'EAttributeType' reference.
	EATTRIBUTE__EATTRIBUTE_TYPE = ESTRUCTURAL_FEATURE_FEATURE_COUNT + 1

	// EATTRIBUTE_FEATURE_COUNT is the number of structural features of the class EAttribute.
	EATTRIBUTE_FEATURE_COUNT = ESTRUCTURAL_FEATURE_FEATURE_COUNT + 2

	// EATTRIBUTE__GET_EANNOTATION_ESTRING is the operation id for the 'getEAnnotation' operation.
	EATTRIBUTE__GET_EANNOTATION_ESTRING = ESTRUCTURAL_FEATURE__GET_EANNOTATION_ESTRING
	// EATTRIBUTE__GET_CONTAINER_CLASS is the operation id for the 'getContainerClass' operation.
	EATTRIBUTE__GET_CONTAINER_CLASS = ESTRUCTURAL_FEATURE__GET_CONTAINER_CLASS

	// EATTRIBUTE_OPERATION_COUNT is the number of EATTRIBUTE_OPERATION_COUNT
	EATTRIBUTE_OPERATION_COUNT = ESTRUCTURAL_FEATURE_OPERATION_COUNT + 0

	// EANNOTATION is the meta object id for the class EAnnotation.
	EANNOTATION = 1

	// EANNOTATION__EANNOTATIONS is the feature id for the EAnnotation 'EAnnotations' containment reference list.
	EANNOTATION__EANNOTATIONS = EMODEL_ELEMENT__EANNOTATIONS

	// EANNOTATION__SOURCE is the feature id for the EAnnotation 'Source' attribute.
	EANNOTATION__SOURCE = EMODEL_ELEMENT_FEATURE_COUNT + 0

	// EANNOTATION__DETAILS is the feature id for the EAnnotation 'Details' map.
	EANNOTATION__DETAILS = EMODEL_ELEMENT_FEATURE_COUNT + 1

	// EANNOTATION__EMODEL_ELEMENT is the feature id for the EAnnotation 'EModelElement' container reference.
	EANNOTATION__EMODEL_ELEMENT = EMODEL_ELEMENT_FEATURE_COUNT + 2

	// EANNOTATION__CONTENTS is the feature id for the EAnnotation 'Contents' containment reference list.
	EANNOTATION__CONTENTS = EMODEL_ELEMENT_FEATURE_COUNT + 3

	// EANNOTATION__REFERENCES is the feature id for the EAnnotation 'References' reference list.
	EANNOTATION__REFERENCES = EMODEL_ELEMENT_FEATURE_COUNT + 4

	// EANNOTATION_FEATURE_COUNT is the number of structural features of the class EAnnotation.
	EANNOTATION_FEATURE_COUNT = EMODEL_ELEMENT_FEATURE_COUNT + 5

	// EANNOTATION__GET_EANNOTATION_ESTRING is the operation id for the 'getEAnnotation' operation.
	EANNOTATION__GET_EANNOTATION_ESTRING = EMODEL_ELEMENT__GET_EANNOTATION_ESTRING

	// EANNOTATION_OPERATION_COUNT is the number of EANNOTATION_OPERATION_COUNT
	EANNOTATION_OPERATION_COUNT = EMODEL_ELEMENT_OPERATION_COUNT + 0

	// ECLASSIFIER is the meta object id for the class EClassifier.
	ECLASSIFIER = 3

	// ECLASSIFIER__EANNOTATIONS is the feature id for the EClassifier 'EAnnotations' containment reference list.
	ECLASSIFIER__EANNOTATIONS = ENAMED_ELEMENT__EANNOTATIONS

	// ECLASSIFIER__NAME is the feature id for the EClassifier 'Name' attribute.
	ECLASSIFIER__NAME = ENAMED_ELEMENT__NAME

	// ECLASSIFIER__INSTANCE_TYPE_NAME is the feature id for the EClassifier 'InstanceTypeName' attribute.
	ECLASSIFIER__INSTANCE_TYPE_NAME = ENAMED_ELEMENT_FEATURE_COUNT + 0

	// ECLASSIFIER__INSTANCE_CLASS is the feature id for the EClassifier 'InstanceClass' attribute.
	ECLASSIFIER__INSTANCE_CLASS = ENAMED_ELEMENT_FEATURE_COUNT + 1

	// ECLASSIFIER__DEFAULT_VALUE is the feature id for the EClassifier 'DefaultValue' attribute.
	ECLASSIFIER__DEFAULT_VALUE = ENAMED_ELEMENT_FEATURE_COUNT + 2

	// ECLASSIFIER__EPACKAGE is the feature id for the EClassifier 'EPackage' container reference.
	ECLASSIFIER__EPACKAGE = ENAMED_ELEMENT_FEATURE_COUNT + 3

	// ECLASSIFIER__CLASSIFIER_ID is the feature id for the EClassifier 'ClassifierID' attribute.
	ECLASSIFIER__CLASSIFIER_ID = ENAMED_ELEMENT_FEATURE_COUNT + 4

	// ECLASSIFIER_FEATURE_COUNT is the number of structural features of the class EClassifier.
	ECLASSIFIER_FEATURE_COUNT = ENAMED_ELEMENT_FEATURE_COUNT + 5

	// ECLASSIFIER__GET_EANNOTATION_ESTRING is the operation id for the 'getEAnnotation' operation.
	ECLASSIFIER__GET_EANNOTATION_ESTRING = ENAMED_ELEMENT__GET_EANNOTATION_ESTRING
	// ECLASSIFIER__IS_INSTANCE_EJAVAOBJECT is the operation id for the 'isInstance' operation.
	ECLASSIFIER__IS_INSTANCE_EJAVAOBJECT = ENAMED_ELEMENT_OPERATION_COUNT + 0

	// ECLASSIFIER_OPERATION_COUNT is the number of ECLASSIFIER_OPERATION_COUNT
	ECLASSIFIER_OPERATION_COUNT = ENAMED_ELEMENT_OPERATION_COUNT + 1

	// ECLASS is the meta object id for the class EClass.
	ECLASS = 2

	// ECLASS__EANNOTATIONS is the feature id for the EClass 'EAnnotations' containment reference list.
	ECLASS__EANNOTATIONS = ECLASSIFIER__EANNOTATIONS

	// ECLASS__NAME is the feature id for the EClass 'Name' attribute.
	ECLASS__NAME = ECLASSIFIER__NAME

	// ECLASS__INSTANCE_TYPE_NAME is the feature id for the EClass 'InstanceTypeName' attribute.
	ECLASS__INSTANCE_TYPE_NAME = ECLASSIFIER__INSTANCE_TYPE_NAME

	// ECLASS__INSTANCE_CLASS is the feature id for the EClass 'InstanceClass' attribute.
	ECLASS__INSTANCE_CLASS = ECLASSIFIER__INSTANCE_CLASS

	// ECLASS__DEFAULT_VALUE is the feature id for the EClass 'DefaultValue' attribute.
	ECLASS__DEFAULT_VALUE = ECLASSIFIER__DEFAULT_VALUE

	// ECLASS__EPACKAGE is the feature id for the EClass 'EPackage' container reference.
	ECLASS__EPACKAGE = ECLASSIFIER__EPACKAGE

	// ECLASS__CLASSIFIER_ID is the feature id for the EClass 'ClassifierID' attribute.
	ECLASS__CLASSIFIER_ID = ECLASSIFIER__CLASSIFIER_ID

	// ECLASS__ABSTRACT is the feature id for the EClass 'Abstract' attribute.
	ECLASS__ABSTRACT = ECLASSIFIER_FEATURE_COUNT + 0

	// ECLASS__INTERFACE is the feature id for the EClass 'Interface' attribute.
	ECLASS__INTERFACE = ECLASSIFIER_FEATURE_COUNT + 1

	// ECLASS__ESTRUCTURAL_FEATURES is the feature id for the EClass 'EStructuralFeatures' containment reference list.
	ECLASS__ESTRUCTURAL_FEATURES = ECLASSIFIER_FEATURE_COUNT + 2

	// ECLASS__EATTRIBUTES is the feature id for the EClass 'EAttributes' reference list.
	ECLASS__EATTRIBUTES = ECLASSIFIER_FEATURE_COUNT + 3

	// ECLASS__EREFERENCES is the feature id for the EClass 'EReferences' reference list.
	ECLASS__EREFERENCES = ECLASSIFIER_FEATURE_COUNT + 4

	// ECLASS__ESUPER_TYPES is the feature id for the EClass 'ESuperTypes' reference list.
	ECLASS__ESUPER_TYPES = ECLASSIFIER_FEATURE_COUNT + 5

	// ECLASS__EOPERATIONS is the feature id for the EClass 'EOperations' containment reference list.
	ECLASS__EOPERATIONS = ECLASSIFIER_FEATURE_COUNT + 6

	// ECLASS__ECONTAINMENT_FEATURES is the feature id for the EClass 'EContainmentFeatures' reference list.
	ECLASS__ECONTAINMENT_FEATURES = ECLASSIFIER_FEATURE_COUNT + 7

	// ECLASS__ECROSS_REFERENCE_FEATURES is the feature id for the EClass 'ECrossReferenceFeatures' reference list.
	ECLASS__ECROSS_REFERENCE_FEATURES = ECLASSIFIER_FEATURE_COUNT + 8

	// ECLASS__EALL_ATTRIBUTES is the feature id for the EClass 'EAllAttributes' reference list.
	ECLASS__EALL_ATTRIBUTES = ECLASSIFIER_FEATURE_COUNT + 9

	// ECLASS__EALL_REFERENCES is the feature id for the EClass 'EAllReferences' reference list.
	ECLASS__EALL_REFERENCES = ECLASSIFIER_FEATURE_COUNT + 10

	// ECLASS__EALL_CONTAINMENTS is the feature id for the EClass 'EAllContainments' reference list.
	ECLASS__EALL_CONTAINMENTS = ECLASSIFIER_FEATURE_COUNT + 11

	// ECLASS__EALL_OPERATIONS is the feature id for the EClass 'EAllOperations' reference list.
	ECLASS__EALL_OPERATIONS = ECLASSIFIER_FEATURE_COUNT + 12

	// ECLASS__EALL_STRUCTURAL_FEATURES is the feature id for the EClass 'EAllStructuralFeatures' reference list.
	ECLASS__EALL_STRUCTURAL_FEATURES = ECLASSIFIER_FEATURE_COUNT + 13

	// ECLASS__EALL_SUPER_TYPES is the feature id for the EClass 'EAllSuperTypes' reference list.
	ECLASS__EALL_SUPER_TYPES = ECLASSIFIER_FEATURE_COUNT + 14

	// ECLASS__EID_ATTRIBUTE is the feature id for the EClass 'EIDAttribute' reference.
	ECLASS__EID_ATTRIBUTE = ECLASSIFIER_FEATURE_COUNT + 15

	// ECLASS_FEATURE_COUNT is the number of structural features of the class EClass.
	ECLASS_FEATURE_COUNT = ECLASSIFIER_FEATURE_COUNT + 16

	// ECLASS__GET_EANNOTATION_ESTRING is the operation id for the 'getEAnnotation' operation.
	ECLASS__GET_EANNOTATION_ESTRING = ECLASSIFIER__GET_EANNOTATION_ESTRING
	// ECLASS__IS_INSTANCE_EJAVAOBJECT is the operation id for the 'isInstance' operation.
	ECLASS__IS_INSTANCE_EJAVAOBJECT = ECLASSIFIER__IS_INSTANCE_EJAVAOBJECT
	// ECLASS__IS_SUPER_TYPE_OF_ECLASS is the operation id for the 'isSuperTypeOf' operation.
	ECLASS__IS_SUPER_TYPE_OF_ECLASS = ECLASSIFIER_OPERATION_COUNT + 0
	// ECLASS__GET_FEATURE_COUNT is the operation id for the 'getFeatureCount' operation.
	ECLASS__GET_FEATURE_COUNT = ECLASSIFIER_OPERATION_COUNT + 1
	// ECLASS__GET_ESTRUCTURAL_FEATURE_EINT is the operation id for the 'getEStructuralFeature' operation.
	ECLASS__GET_ESTRUCTURAL_FEATURE_EINT = ECLASSIFIER_OPERATION_COUNT + 2
	// ECLASS__GET_ESTRUCTURAL_FEATURE_ESTRING is the operation id for the 'getEStructuralFeature' operation.
	ECLASS__GET_ESTRUCTURAL_FEATURE_ESTRING = ECLASSIFIER_OPERATION_COUNT + 3
	// ECLASS__GET_FEATURE_ID_ESTRUCTURALFEATURE is the operation id for the 'getFeatureID' operation.
	ECLASS__GET_FEATURE_ID_ESTRUCTURALFEATURE = ECLASSIFIER_OPERATION_COUNT + 4
	// ECLASS__GET_OPERATION_COUNT is the operation id for the 'getOperationCount' operation.
	ECLASS__GET_OPERATION_COUNT = ECLASSIFIER_OPERATION_COUNT + 5
	// ECLASS__GET_EOPERATION_EINT is the operation id for the 'getEOperation' operation.
	ECLASS__GET_EOPERATION_EINT = ECLASSIFIER_OPERATION_COUNT + 6
	// ECLASS__GET_OPERATION_ID_EOPERATION is the operation id for the 'getOperationID' operation.
	ECLASS__GET_OPERATION_ID_EOPERATION = ECLASSIFIER_OPERATION_COUNT + 7
	// ECLASS__GET_OVERRIDE_EOPERATION is the operation id for the 'getOverride' operation.
	ECLASS__GET_OVERRIDE_EOPERATION = ECLASSIFIER_OPERATION_COUNT + 8
	// ECLASS__GET_FEATURE_TYPE_ESTRUCTURALFEATURE is the operation id for the 'getFeatureType' operation.
	ECLASS__GET_FEATURE_TYPE_ESTRUCTURALFEATURE = ECLASSIFIER_OPERATION_COUNT + 9

	// ECLASS_OPERATION_COUNT is the number of ECLASS_OPERATION_COUNT
	ECLASS_OPERATION_COUNT = ECLASSIFIER_OPERATION_COUNT + 10

	// EDATA_TYPE is the meta object id for the class EDataType.
	EDATA_TYPE = 4

	// EDATA_TYPE__EANNOTATIONS is the feature id for the EDataType 'EAnnotations' containment reference list.
	EDATA_TYPE__EANNOTATIONS = ECLASSIFIER__EANNOTATIONS

	// EDATA_TYPE__NAME is the feature id for the EDataType 'Name' attribute.
	EDATA_TYPE__NAME = ECLASSIFIER__NAME

	// EDATA_TYPE__INSTANCE_TYPE_NAME is the feature id for the EDataType 'InstanceTypeName' attribute.
	EDATA_TYPE__INSTANCE_TYPE_NAME = ECLASSIFIER__INSTANCE_TYPE_NAME

	// EDATA_TYPE__INSTANCE_CLASS is the feature id for the EDataType 'InstanceClass' attribute.
	EDATA_TYPE__INSTANCE_CLASS = ECLASSIFIER__INSTANCE_CLASS

	// EDATA_TYPE__DEFAULT_VALUE is the feature id for the EDataType 'DefaultValue' attribute.
	EDATA_TYPE__DEFAULT_VALUE = ECLASSIFIER__DEFAULT_VALUE

	// EDATA_TYPE__EPACKAGE is the feature id for the EDataType 'EPackage' container reference.
	EDATA_TYPE__EPACKAGE = ECLASSIFIER__EPACKAGE

	// EDATA_TYPE__CLASSIFIER_ID is the feature id for the EDataType 'ClassifierID' attribute.
	EDATA_TYPE__CLASSIFIER_ID = ECLASSIFIER__CLASSIFIER_ID

	// EDATA_TYPE__SERIALIZABLE is the feature id for the EDataType 'Serializable' attribute.
	EDATA_TYPE__SERIALIZABLE = ECLASSIFIER_FEATURE_COUNT + 0

	// EDATA_TYPE_FEATURE_COUNT is the number of structural features of the class EDataType.
	EDATA_TYPE_FEATURE_COUNT = ECLASSIFIER_FEATURE_COUNT + 1

	// EDATA_TYPE__GET_EANNOTATION_ESTRING is the operation id for the 'getEAnnotation' operation.
	EDATA_TYPE__GET_EANNOTATION_ESTRING = ECLASSIFIER__GET_EANNOTATION_ESTRING
	// EDATA_TYPE__IS_INSTANCE_EJAVAOBJECT is the operation id for the 'isInstance' operation.
	EDATA_TYPE__IS_INSTANCE_EJAVAOBJECT = ECLASSIFIER__IS_INSTANCE_EJAVAOBJECT

	// EDATA_TYPE_OPERATION_COUNT is the number of EDATA_TYPE_OPERATION_COUNT
	EDATA_TYPE_OPERATION_COUNT = ECLASSIFIER_OPERATION_COUNT + 0

	// EENUM is the meta object id for the class EEnum.
	EENUM = 5

	// EENUM__EANNOTATIONS is the feature id for the EEnum 'EAnnotations' containment reference list.
	EENUM__EANNOTATIONS = EDATA_TYPE__EANNOTATIONS

	// EENUM__NAME is the feature id for the EEnum 'Name' attribute.
	EENUM__NAME = EDATA_TYPE__NAME

	// EENUM__INSTANCE_TYPE_NAME is the feature id for the EEnum 'InstanceTypeName' attribute.
	EENUM__INSTANCE_TYPE_NAME = EDATA_TYPE__INSTANCE_TYPE_NAME

	// EENUM__INSTANCE_CLASS is the feature id for the EEnum 'InstanceClass' attribute.
	EENUM__INSTANCE_CLASS = EDATA_TYPE__INSTANCE_CLASS

	// EENUM__DEFAULT_VALUE is the feature id for the EEnum 'DefaultValue' attribute.
	EENUM__DEFAULT_VALUE = EDATA_TYPE__DEFAULT_VALUE

	// EENUM__EPACKAGE is the feature id for the EEnum 'EPackage' container reference.
	EENUM__EPACKAGE = EDATA_TYPE__EPACKAGE

	// EENUM__CLASSIFIER_ID is the feature id for the EEnum 'ClassifierID' attribute.
	EENUM__CLASSIFIER_ID = EDATA_TYPE__CLASSIFIER_ID

	// EENUM__SERIALIZABLE is the feature id for the EEnum 'Serializable' attribute.
	EENUM__SERIALIZABLE = EDATA_TYPE__SERIALIZABLE

	// EENUM__ELITERALS is the feature id for the EEnum 'ELiterals' containment reference list.
	EENUM__ELITERALS = EDATA_TYPE_FEATURE_COUNT + 0

	// EENUM_FEATURE_COUNT is the number of structural features of the class EEnum.
	EENUM_FEATURE_COUNT = EDATA_TYPE_FEATURE_COUNT + 1

	// EENUM__GET_EANNOTATION_ESTRING is the operation id for the 'getEAnnotation' operation.
	EENUM__GET_EANNOTATION_ESTRING = EDATA_TYPE__GET_EANNOTATION_ESTRING
	// EENUM__IS_INSTANCE_EJAVAOBJECT is the operation id for the 'isInstance' operation.
	EENUM__IS_INSTANCE_EJAVAOBJECT = EDATA_TYPE__IS_INSTANCE_EJAVAOBJECT
	// EENUM__GET_EENUM_LITERAL_ESTRING is the operation id for the 'getEEnumLiteral' operation.
	EENUM__GET_EENUM_LITERAL_ESTRING = EDATA_TYPE_OPERATION_COUNT + 0
	// EENUM__GET_EENUM_LITERAL_EINT is the operation id for the 'getEEnumLiteral' operation.
	EENUM__GET_EENUM_LITERAL_EINT = EDATA_TYPE_OPERATION_COUNT + 1
	// EENUM__GET_EENUM_LITERAL_BY_LITERAL_ESTRING is the operation id for the 'getEEnumLiteralByLiteral' operation.
	EENUM__GET_EENUM_LITERAL_BY_LITERAL_ESTRING = EDATA_TYPE_OPERATION_COUNT + 2

	// EENUM_OPERATION_COUNT is the number of EENUM_OPERATION_COUNT
	EENUM_OPERATION_COUNT = EDATA_TYPE_OPERATION_COUNT + 3

	// EENUM_LITERAL is the meta object id for the class EEnumLiteral.
	EENUM_LITERAL = 6

	// EENUM_LITERAL__EANNOTATIONS is the feature id for the EEnumLiteral 'EAnnotations' containment reference list.
	EENUM_LITERAL__EANNOTATIONS = ENAMED_ELEMENT__EANNOTATIONS

	// EENUM_LITERAL__NAME is the feature id for the EEnumLiteral 'Name' attribute.
	EENUM_LITERAL__NAME = ENAMED_ELEMENT__NAME

	// EENUM_LITERAL__VALUE is the feature id for the EEnumLiteral 'Value' attribute.
	EENUM_LITERAL__VALUE = ENAMED_ELEMENT_FEATURE_COUNT + 0

	// EENUM_LITERAL__INSTANCE is the feature id for the EEnumLiteral 'Instance' attribute.
	EENUM_LITERAL__INSTANCE = ENAMED_ELEMENT_FEATURE_COUNT + 1

	// EENUM_LITERAL__LITERAL is the feature id for the EEnumLiteral 'Literal' attribute.
	EENUM_LITERAL__LITERAL = ENAMED_ELEMENT_FEATURE_COUNT + 2

	// EENUM_LITERAL__EENUM is the feature id for the EEnumLiteral 'EEnum' container reference.
	EENUM_LITERAL__EENUM = ENAMED_ELEMENT_FEATURE_COUNT + 3

	// EENUM_LITERAL_FEATURE_COUNT is the number of structural features of the class EEnumLiteral.
	EENUM_LITERAL_FEATURE_COUNT = ENAMED_ELEMENT_FEATURE_COUNT + 4

	// EENUM_LITERAL__GET_EANNOTATION_ESTRING is the operation id for the 'getEAnnotation' operation.
	EENUM_LITERAL__GET_EANNOTATION_ESTRING = ENAMED_ELEMENT__GET_EANNOTATION_ESTRING

	// EENUM_LITERAL_OPERATION_COUNT is the number of EENUM_LITERAL_OPERATION_COUNT
	EENUM_LITERAL_OPERATION_COUNT = ENAMED_ELEMENT_OPERATION_COUNT + 0

	// EFACTORY is the meta object id for the class EFactory.
	EFACTORY = 7

	// EFACTORY__EANNOTATIONS is the feature id for the EFactory 'EAnnotations' containment reference list.
	EFACTORY__EANNOTATIONS = EMODEL_ELEMENT__EANNOTATIONS

	// EFACTORY__EPACKAGE is the feature id for the EFactory 'EPackage' container reference.
	EFACTORY__EPACKAGE = EMODEL_ELEMENT_FEATURE_COUNT + 0

	// EFACTORY_FEATURE_COUNT is the number of structural features of the class EFactory.
	EFACTORY_FEATURE_COUNT = EMODEL_ELEMENT_FEATURE_COUNT + 1

	// EFACTORY__GET_EANNOTATION_ESTRING is the operation id for the 'getEAnnotation' operation.
	EFACTORY__GET_EANNOTATION_ESTRING = EMODEL_ELEMENT__GET_EANNOTATION_ESTRING
	// EFACTORY__CREATE_ECLASS is the operation id for the 'create' operation.
	EFACTORY__CREATE_ECLASS = EMODEL_ELEMENT_OPERATION_COUNT + 0
	// EFACTORY__CREATE_FROM_STRING_EDATATYPE_ESTRING is the operation id for the 'createFromString' operation.
	EFACTORY__CREATE_FROM_STRING_EDATATYPE_ESTRING = EMODEL_ELEMENT_OPERATION_COUNT + 1
	// EFACTORY__CONVERT_TO_STRING_EDATATYPE_EJAVAOBJECT is the operation id for the 'convertToString' operation.
	EFACTORY__CONVERT_TO_STRING_EDATATYPE_EJAVAOBJECT = EMODEL_ELEMENT_OPERATION_COUNT + 2

	// EFACTORY_OPERATION_COUNT is the number of EFACTORY_OPERATION_COUNT
	EFACTORY_OPERATION_COUNT = EMODEL_ELEMENT_OPERATION_COUNT + 3

	// EOBJECT is the meta object id for the class EObject.
	EOBJECT = 10

	// EOBJECT_FEATURE_COUNT is the number of structural features of the class EObject.
	EOBJECT_FEATURE_COUNT = 0

	// EOBJECT__ECLASS is the operation id for the 'eClass' operation.
	EOBJECT__ECLASS = 0
	// EOBJECT__EIS_PROXY is the operation id for the 'eIsProxy' operation.
	EOBJECT__EIS_PROXY = 1
	// EOBJECT__ERESOURCE is the operation id for the 'eResource' operation.
	EOBJECT__ERESOURCE = 2
	// EOBJECT__ECONTAINER is the operation id for the 'eContainer' operation.
	EOBJECT__ECONTAINER = 3
	// EOBJECT__ECONTAINING_FEATURE is the operation id for the 'eContainingFeature' operation.
	EOBJECT__ECONTAINING_FEATURE = 4
	// EOBJECT__ECONTAINMENT_FEATURE is the operation id for the 'eContainmentFeature' operation.
	EOBJECT__ECONTAINMENT_FEATURE = 5
	// EOBJECT__ECONTENTS is the operation id for the 'eContents' operation.
	EOBJECT__ECONTENTS = 6
	// EOBJECT__EALL_CONTENTS is the operation id for the 'eAllContents' operation.
	EOBJECT__EALL_CONTENTS = 7
	// EOBJECT__ECROSS_REFERENCES is the operation id for the 'eCrossReferences' operation.
	EOBJECT__ECROSS_REFERENCES = 8
	// EOBJECT__EGET_ESTRUCTURALFEATURE is the operation id for the 'eGet' operation.
	EOBJECT__EGET_ESTRUCTURALFEATURE = 9
	// EOBJECT__EGET_ESTRUCTURALFEATURE_EBOOLEAN is the operation id for the 'eGet' operation.
	EOBJECT__EGET_ESTRUCTURALFEATURE_EBOOLEAN = 10
	// EOBJECT__ESET_ESTRUCTURALFEATURE_EJAVAOBJECT is the operation id for the 'eSet' operation.
	EOBJECT__ESET_ESTRUCTURALFEATURE_EJAVAOBJECT = 11
	// EOBJECT__EIS_SET_ESTRUCTURALFEATURE is the operation id for the 'eIsSet' operation.
	EOBJECT__EIS_SET_ESTRUCTURALFEATURE = 12
	// EOBJECT__EUNSET_ESTRUCTURALFEATURE is the operation id for the 'eUnset' operation.
	EOBJECT__EUNSET_ESTRUCTURALFEATURE = 13
	// EOBJECT__EINVOKE_EOPERATION_EELIST is the operation id for the 'eInvoke' operation.
	EOBJECT__EINVOKE_EOPERATION_EELIST = 14

	// EOBJECT_OPERATION_COUNT is the number of EOBJECT_OPERATION_COUNT
	EOBJECT_OPERATION_COUNT = 15

	// EOPERATION is the meta object id for the class EOperation.
	EOPERATION = 11

	// EOPERATION__EANNOTATIONS is the feature id for the EOperation 'EAnnotations' containment reference list.
	EOPERATION__EANNOTATIONS = ETYPED_ELEMENT__EANNOTATIONS

	// EOPERATION__NAME is the feature id for the EOperation 'Name' attribute.
	EOPERATION__NAME = ETYPED_ELEMENT__NAME

	// EOPERATION__ORDERED is the feature id for the EOperation 'Ordered' attribute.
	EOPERATION__ORDERED = ETYPED_ELEMENT__ORDERED

	// EOPERATION__UNIQUE is the feature id for the EOperation 'Unique' attribute.
	EOPERATION__UNIQUE = ETYPED_ELEMENT__UNIQUE

	// EOPERATION__LOWER_BOUND is the feature id for the EOperation 'LowerBound' attribute.
	EOPERATION__LOWER_BOUND = ETYPED_ELEMENT__LOWER_BOUND

	// EOPERATION__UPPER_BOUND is the feature id for the EOperation 'UpperBound' attribute.
	EOPERATION__UPPER_BOUND = ETYPED_ELEMENT__UPPER_BOUND

	// EOPERATION__MANY is the feature id for the EOperation 'Many' attribute.
	EOPERATION__MANY = ETYPED_ELEMENT__MANY

	// EOPERATION__REQUIRED is the feature id for the EOperation 'Required' attribute.
	EOPERATION__REQUIRED = ETYPED_ELEMENT__REQUIRED

	// EOPERATION__ETYPE is the feature id for the EOperation 'EType' reference.
	EOPERATION__ETYPE = ETYPED_ELEMENT__ETYPE

	// EOPERATION__ECONTAINING_CLASS is the feature id for the EOperation 'EContainingClass' container reference.
	EOPERATION__ECONTAINING_CLASS = ETYPED_ELEMENT_FEATURE_COUNT + 0

	// EOPERATION__EPARAMETERS is the feature id for the EOperation 'EParameters' containment reference list.
	EOPERATION__EPARAMETERS = ETYPED_ELEMENT_FEATURE_COUNT + 1

	// EOPERATION__EEXCEPTIONS is the feature id for the EOperation 'EExceptions' reference list.
	EOPERATION__EEXCEPTIONS = ETYPED_ELEMENT_FEATURE_COUNT + 2

	// EOPERATION__OPERATION_ID is the feature id for the EOperation 'OperationID' attribute.
	EOPERATION__OPERATION_ID = ETYPED_ELEMENT_FEATURE_COUNT + 3

	// EOPERATION_FEATURE_COUNT is the number of structural features of the class EOperation.
	EOPERATION_FEATURE_COUNT = ETYPED_ELEMENT_FEATURE_COUNT + 4

	// EOPERATION__GET_EANNOTATION_ESTRING is the operation id for the 'getEAnnotation' operation.
	EOPERATION__GET_EANNOTATION_ESTRING = ETYPED_ELEMENT__GET_EANNOTATION_ESTRING
	// EOPERATION__IS_OVERRIDE_OF_EOPERATION is the operation id for the 'isOverrideOf' operation.
	EOPERATION__IS_OVERRIDE_OF_EOPERATION = ETYPED_ELEMENT_OPERATION_COUNT + 0

	// EOPERATION_OPERATION_COUNT is the number of EOPERATION_OPERATION_COUNT
	EOPERATION_OPERATION_COUNT = ETYPED_ELEMENT_OPERATION_COUNT + 1

	// EPACKAGE is the meta object id for the class EPackage.
	EPACKAGE = 12

	// EPACKAGE__EANNOTATIONS is the feature id for the EPackage 'EAnnotations' containment reference list.
	EPACKAGE__EANNOTATIONS = ENAMED_ELEMENT__EANNOTATIONS

	// EPACKAGE__NAME is the feature id for the EPackage 'Name' attribute.
	EPACKAGE__NAME = ENAMED_ELEMENT__NAME

	// EPACKAGE__NS_URI is the feature id for the EPackage 'NsURI' attribute.
	EPACKAGE__NS_URI = ENAMED_ELEMENT_FEATURE_COUNT + 0

	// EPACKAGE__NS_PREFIX is the feature id for the EPackage 'NsPrefix' attribute.
	EPACKAGE__NS_PREFIX = ENAMED_ELEMENT_FEATURE_COUNT + 1

	// EPACKAGE__EFACTORY_INSTANCE is the feature id for the EPackage 'EFactoryInstance' containment reference.
	EPACKAGE__EFACTORY_INSTANCE = ENAMED_ELEMENT_FEATURE_COUNT + 2

	// EPACKAGE__ECLASSIFIERS is the feature id for the EPackage 'EClassifiers' containment reference list.
	EPACKAGE__ECLASSIFIERS = ENAMED_ELEMENT_FEATURE_COUNT + 3

	// EPACKAGE__ESUB_PACKAGES is the feature id for the EPackage 'ESubPackages' containment reference list.
	EPACKAGE__ESUB_PACKAGES = ENAMED_ELEMENT_FEATURE_COUNT + 4

	// EPACKAGE__ESUPER_PACKAGE is the feature id for the EPackage 'ESuperPackage' container reference.
	EPACKAGE__ESUPER_PACKAGE = ENAMED_ELEMENT_FEATURE_COUNT + 5

	// EPACKAGE_FEATURE_COUNT is the number of structural features of the class EPackage.
	EPACKAGE_FEATURE_COUNT = ENAMED_ELEMENT_FEATURE_COUNT + 6

	// EPACKAGE__GET_EANNOTATION_ESTRING is the operation id for the 'getEAnnotation' operation.
	EPACKAGE__GET_EANNOTATION_ESTRING = ENAMED_ELEMENT__GET_EANNOTATION_ESTRING
	// EPACKAGE__GET_ECLASSIFIER_ESTRING is the operation id for the 'getEClassifier' operation.
	EPACKAGE__GET_ECLASSIFIER_ESTRING = ENAMED_ELEMENT_OPERATION_COUNT + 0

	// EPACKAGE_OPERATION_COUNT is the number of EPACKAGE_OPERATION_COUNT
	EPACKAGE_OPERATION_COUNT = ENAMED_ELEMENT_OPERATION_COUNT + 1

	// EPARAMETER is the meta object id for the class EParameter.
	EPARAMETER = 13

	// EPARAMETER__EANNOTATIONS is the feature id for the EParameter 'EAnnotations' containment reference list.
	EPARAMETER__EANNOTATIONS = ETYPED_ELEMENT__EANNOTATIONS

	// EPARAMETER__NAME is the feature id for the EParameter 'Name' attribute.
	EPARAMETER__NAME = ETYPED_ELEMENT__NAME

	// EPARAMETER__ORDERED is the feature id for the EParameter 'Ordered' attribute.
	EPARAMETER__ORDERED = ETYPED_ELEMENT__ORDERED

	// EPARAMETER__UNIQUE is the feature id for the EParameter 'Unique' attribute.
	EPARAMETER__UNIQUE = ETYPED_ELEMENT__UNIQUE

	// EPARAMETER__LOWER_BOUND is the feature id for the EParameter 'LowerBound' attribute.
	EPARAMETER__LOWER_BOUND = ETYPED_ELEMENT__LOWER_BOUND

	// EPARAMETER__UPPER_BOUND is the feature id for the EParameter 'UpperBound' attribute.
	EPARAMETER__UPPER_BOUND = ETYPED_ELEMENT__UPPER_BOUND

	// EPARAMETER__MANY is the feature id for the EParameter 'Many' attribute.
	EPARAMETER__MANY = ETYPED_ELEMENT__MANY

	// EPARAMETER__REQUIRED is the feature id for the EParameter 'Required' attribute.
	EPARAMETER__REQUIRED = ETYPED_ELEMENT__REQUIRED

	// EPARAMETER__ETYPE is the feature id for the EParameter 'EType' reference.
	EPARAMETER__ETYPE = ETYPED_ELEMENT__ETYPE

	// EPARAMETER__EOPERATION is the feature id for the EParameter 'EOperation' container reference.
	EPARAMETER__EOPERATION = ETYPED_ELEMENT_FEATURE_COUNT + 0

	// EPARAMETER_FEATURE_COUNT is the number of structural features of the class EParameter.
	EPARAMETER_FEATURE_COUNT = ETYPED_ELEMENT_FEATURE_COUNT + 1

	// EPARAMETER__GET_EANNOTATION_ESTRING is the operation id for the 'getEAnnotation' operation.
	EPARAMETER__GET_EANNOTATION_ESTRING = ETYPED_ELEMENT__GET_EANNOTATION_ESTRING

	// EPARAMETER_OPERATION_COUNT is the number of EPARAMETER_OPERATION_COUNT
	EPARAMETER_OPERATION_COUNT = ETYPED_ELEMENT_OPERATION_COUNT + 0

	// EREFERENCE is the meta object id for the class EReference.
	EREFERENCE = 14

	// EREFERENCE__EANNOTATIONS is the feature id for the EReference 'EAnnotations' containment reference list.
	EREFERENCE__EANNOTATIONS = ESTRUCTURAL_FEATURE__EANNOTATIONS

	// EREFERENCE__NAME is the feature id for the EReference 'Name' attribute.
	EREFERENCE__NAME = ESTRUCTURAL_FEATURE__NAME

	// EREFERENCE__ORDERED is the feature id for the EReference 'Ordered' attribute.
	EREFERENCE__ORDERED = ESTRUCTURAL_FEATURE__ORDERED

	// EREFERENCE__UNIQUE is the feature id for the EReference 'Unique' attribute.
	EREFERENCE__UNIQUE = ESTRUCTURAL_FEATURE__UNIQUE

	// EREFERENCE__LOWER_BOUND is the feature id for the EReference 'LowerBound' attribute.
	EREFERENCE__LOWER_BOUND = ESTRUCTURAL_FEATURE__LOWER_BOUND

	// EREFERENCE__UPPER_BOUND is the feature id for the EReference 'UpperBound' attribute.
	EREFERENCE__UPPER_BOUND = ESTRUCTURAL_FEATURE__UPPER_BOUND

	// EREFERENCE__MANY is the feature id for the EReference 'Many' attribute.
	EREFERENCE__MANY = ESTRUCTURAL_FEATURE__MANY

	// EREFERENCE__REQUIRED is the feature id for the EReference 'Required' attribute.
	EREFERENCE__REQUIRED = ESTRUCTURAL_FEATURE__REQUIRED

	// EREFERENCE__ETYPE is the feature id for the EReference 'EType' reference.
	EREFERENCE__ETYPE = ESTRUCTURAL_FEATURE__ETYPE

	// EREFERENCE__CHANGEABLE is the feature id for the EReference 'Changeable' attribute.
	EREFERENCE__CHANGEABLE = ESTRUCTURAL_FEATURE__CHANGEABLE

	// EREFERENCE__VOLATILE is the feature id for the EReference 'Volatile' attribute.
	EREFERENCE__VOLATILE = ESTRUCTURAL_FEATURE__VOLATILE

	// EREFERENCE__TRANSIENT is the feature id for the EReference 'Transient' attribute.
	EREFERENCE__TRANSIENT = ESTRUCTURAL_FEATURE__TRANSIENT

	// EREFERENCE__DEFAULT_VALUE_LITERAL is the feature id for the EReference 'DefaultValueLiteral' attribute.
	EREFERENCE__DEFAULT_VALUE_LITERAL = ESTRUCTURAL_FEATURE__DEFAULT_VALUE_LITERAL

	// EREFERENCE__DEFAULT_VALUE is the feature id for the EReference 'DefaultValue' attribute.
	EREFERENCE__DEFAULT_VALUE = ESTRUCTURAL_FEATURE__DEFAULT_VALUE

	// EREFERENCE__UNSETTABLE is the feature id for the EReference 'Unsettable' attribute.
	EREFERENCE__UNSETTABLE = ESTRUCTURAL_FEATURE__UNSETTABLE

	// EREFERENCE__DERIVED is the feature id for the EReference 'Derived' attribute.
	EREFERENCE__DERIVED = ESTRUCTURAL_FEATURE__DERIVED

	// EREFERENCE__ECONTAINING_CLASS is the feature id for the EReference 'EContainingClass' container reference.
	EREFERENCE__ECONTAINING_CLASS = ESTRUCTURAL_FEATURE__ECONTAINING_CLASS

	// EREFERENCE__FEATURE_ID is the feature id for the EReference 'FeatureID' attribute.
	EREFERENCE__FEATURE_ID = ESTRUCTURAL_FEATURE__FEATURE_ID

	// EREFERENCE__CONTAINMENT is the feature id for the EReference 'Containment' attribute.
	EREFERENCE__CONTAINMENT = ESTRUCTURAL_FEATURE_FEATURE_COUNT + 0

	// EREFERENCE__CONTAINER is the feature id for the EReference 'Container' attribute.
	EREFERENCE__CONTAINER = ESTRUCTURAL_FEATURE_FEATURE_COUNT + 1

	// EREFERENCE__RESOLVE_PROXIES is the feature id for the EReference 'ResolveProxies' attribute.
	EREFERENCE__RESOLVE_PROXIES = ESTRUCTURAL_FEATURE_FEATURE_COUNT + 2

	// EREFERENCE__EOPPOSITE is the feature id for the EReference 'EOpposite' reference.
	EREFERENCE__EOPPOSITE = ESTRUCTURAL_FEATURE_FEATURE_COUNT + 3

	// EREFERENCE__EREFERENCE_TYPE is the feature id for the EReference 'EReferenceType' reference.
	EREFERENCE__EREFERENCE_TYPE = ESTRUCTURAL_FEATURE_FEATURE_COUNT + 4

	// EREFERENCE__EKEYS is the feature id for the EReference 'EKeys' reference list.
	EREFERENCE__EKEYS = ESTRUCTURAL_FEATURE_FEATURE_COUNT + 5

	// EREFERENCE_FEATURE_COUNT is the number of structural features of the class EReference.
	EREFERENCE_FEATURE_COUNT = ESTRUCTURAL_FEATURE_FEATURE_COUNT + 6

	// EREFERENCE__GET_EANNOTATION_ESTRING is the operation id for the 'getEAnnotation' operation.
	EREFERENCE__GET_EANNOTATION_ESTRING = ESTRUCTURAL_FEATURE__GET_EANNOTATION_ESTRING
	// EREFERENCE__GET_CONTAINER_CLASS is the operation id for the 'getContainerClass' operation.
	EREFERENCE__GET_CONTAINER_CLASS = ESTRUCTURAL_FEATURE__GET_CONTAINER_CLASS

	// EREFERENCE_OPERATION_COUNT is the number of EREFERENCE_OPERATION_COUNT
	EREFERENCE_OPERATION_COUNT = ESTRUCTURAL_FEATURE_OPERATION_COUNT + 0

	// ESTRING_TO_STRING_MAP_ENTRY is the meta object id for the class EStringToStringMapEntry.
	ESTRING_TO_STRING_MAP_ENTRY = 48

	// ESTRING_TO_STRING_MAP_ENTRY__KEY is the feature id for the EStringToStringMapEntry 'Key' attribute.
	ESTRING_TO_STRING_MAP_ENTRY__KEY = 0

	// ESTRING_TO_STRING_MAP_ENTRY__VALUE is the feature id for the EStringToStringMapEntry 'Value' attribute.
	ESTRING_TO_STRING_MAP_ENTRY__VALUE = 1

	// ESTRING_TO_STRING_MAP_ENTRY_FEATURE_COUNT is the number of structural features of the class EStringToStringMapEntry.
	ESTRING_TO_STRING_MAP_ENTRY_FEATURE_COUNT = 2

	// ESTRING_TO_STRING_MAP_ENTRY_OPERATION_COUNT is the number of ESTRING_TO_STRING_MAP_ENTRY_OPERATION_COUNT
	ESTRING_TO_STRING_MAP_ENTRY_OPERATION_COUNT = 0

	// EGENERIC_TYPE is the meta object id for the class EGenericType.
	EGENERIC_TYPE = 50

	// EGENERIC_TYPE__EUPPER_BOUND is the feature id for the EGenericType 'EUpperBound' containment reference.
	EGENERIC_TYPE__EUPPER_BOUND = 0

	// EGENERIC_TYPE__ETYPE_ARGUMENTS is the feature id for the EGenericType 'ETypeArguments' containment reference list.
	EGENERIC_TYPE__ETYPE_ARGUMENTS = 1

	// EGENERIC_TYPE__ERAW_TYPE is the feature id for the EGenericType 'ERawType' reference.
	EGENERIC_TYPE__ERAW_TYPE = 2

	// EGENERIC_TYPE__ELOWER_BOUND is the feature id for the EGenericType 'ELowerBound' containment reference.
	EGENERIC_TYPE__ELOWER_BOUND = 3

	// EGENERIC_TYPE__ETYPE_PARAMETER is the feature id for the EGenericType 'ETypeParameter' reference.
	EGENERIC_TYPE__ETYPE_PARAMETER = 4

	// EGENERIC_TYPE__ECLASSIFIER is the feature id for the EGenericType 'EClassifier' reference.
	EGENERIC_TYPE__ECLASSIFIER = 5

	// EGENERIC_TYPE_FEATURE_COUNT is the number of structural features of the class EGenericType.
	EGENERIC_TYPE_FEATURE_COUNT = 6

	// EGENERIC_TYPE__IS_INSTANCE_EJAVAOBJECT is the operation id for the 'isInstance' operation.
	EGENERIC_TYPE__IS_INSTANCE_EJAVAOBJECT = 0

	// EGENERIC_TYPE_OPERATION_COUNT is the number of EGENERIC_TYPE_OPERATION_COUNT
	EGENERIC_TYPE_OPERATION_COUNT = 1

	// ETYPE_PARAMETER is the meta object id for the class ETypeParameter.
	ETYPE_PARAMETER = 51

	// ETYPE_PARAMETER__EANNOTATIONS is the feature id for the ETypeParameter 'EAnnotations' containment reference list.
	ETYPE_PARAMETER__EANNOTATIONS = ENAMED_ELEMENT__EANNOTATIONS

	// ETYPE_PARAMETER__NAME is the feature id for the ETypeParameter 'Name' attribute.
	ETYPE_PARAMETER__NAME = ENAMED_ELEMENT__NAME

	// ETYPE_PARAMETER__EBOUNDS is the feature id for the ETypeParameter 'EBounds' containment reference list.
	ETYPE_PARAMETER__EBOUNDS = ENAMED_ELEMENT_FEATURE_COUNT + 0

	// ETYPE_PARAMETER_FEATURE_COUNT is the number of structural features of the class ETypeParameter.
	ETYPE_PARAMETER_FEATURE_COUNT = ENAMED_ELEMENT_FEATURE_COUNT + 1

	// ETYPE_PARAMETER__GET_EANNOTATION_ESTRING is the operation id for the 'getEAnnotation' operation.
	ETYPE_PARAMETER__GET_EANNOTATION_ESTRING = ENAMED_ELEMENT__GET_EANNOTATION_ESTRING

	// ETYPE_PARAMETER_OPERATION_COUNT is the number of ETYPE_PARAMETER_OPERATION_COUNT
	ETYPE_PARAMETER_OPERATION_COUNT = ENAMED_ELEMENT_OPERATION_COUNT + 0

	// EBIG_DECIMAL The meta object id for the data type EBigDecimal.
	EBIG_DECIMAL = 17
	// EBIG_INTEGER The meta object id for the data type EBigInteger.
	EBIG_INTEGER = 18
	// EBOOLEAN The meta object id for the data type EBoolean.
	EBOOLEAN = 19
	// EBOOLEAN_OBJECT The meta object id for the data type EBooleanObject.
	EBOOLEAN_OBJECT = 20
	// EBYTE The meta object id for the data type EByte.
	EBYTE = 21
	// EBYTE_ARRAY The meta object id for the data type EByteArray.
	EBYTE_ARRAY = 22
	// EBYTE_OBJECT The meta object id for the data type EByteObject.
	EBYTE_OBJECT = 23
	// ECHAR The meta object id for the data type EChar.
	ECHAR = 24
	// ECHARACTER_OBJECT The meta object id for the data type ECharacterObject.
	ECHARACTER_OBJECT = 25
	// EDATE The meta object id for the data type EDate.
	EDATE = 26
	// EDIAGNOSTIC_CHAIN The meta object id for the data type EDiagnosticChain.
	EDIAGNOSTIC_CHAIN = 27
	// EDOUBLE The meta object id for the data type EDouble.
	EDOUBLE = 28
	// EDOUBLE_OBJECT The meta object id for the data type EDoubleObject.
	EDOUBLE_OBJECT = 29
	// EE_LIST The meta object id for the data type EEList.
	EE_LIST = 30
	// EENUMERATOR The meta object id for the data type EEnumerator.
	EENUMERATOR = 31
	// EFEATURE_MAP The meta object id for the data type EFeatureMap.
	EFEATURE_MAP = 32
	// EFEATURE_MAP_ENTRY The meta object id for the data type EFeatureMapEntry.
	EFEATURE_MAP_ENTRY = 33
	// EFLOAT The meta object id for the data type EFloat.
	EFLOAT = 34
	// EFLOAT_OBJECT The meta object id for the data type EFloatObject.
	EFLOAT_OBJECT = 35
	// EINT The meta object id for the data type EInt.
	EINT = 36
	// EINTEGER_OBJECT The meta object id for the data type EIntegerObject.
	EINTEGER_OBJECT = 37
	// EINVOCATION_TARGET_EXCEPTION The meta object id for the data type EInvocationTargetException.
	EINVOCATION_TARGET_EXCEPTION = 52
	// EJAVA_CLASS The meta object id for the data type EJavaClass.
	EJAVA_CLASS = 38
	// EJAVA_OBJECT The meta object id for the data type EJavaObject.
	EJAVA_OBJECT = 39
	// ELONG The meta object id for the data type ELong.
	ELONG = 40
	// ELONG_OBJECT The meta object id for the data type ELongObject.
	ELONG_OBJECT = 41
	// EMAP The meta object id for the data type EMap.
	EMAP = 42
	// ERESOURCE The meta object id for the data type EResource.
	ERESOURCE = 43
	// ERESOURCE_SET The meta object id for the data type EResourceSet.
	ERESOURCE_SET = 44
	// ESHORT The meta object id for the data type EShort.
	ESHORT = 45
	// ESHORT_OBJECT The meta object id for the data type EShortObject.
	ESHORT_OBJECT = 46
	// ESTRING The meta object id for the data type EString.
	ESTRING = 47
	// ETREE_ITERATOR The meta object id for the data type ETreeIterator.
	ETREE_ITERATOR = 49
)

// EcorePackage is The Metamodel Package for the ecore metamodel.
// This package is used to enable the reflection of model elements.
// It contains all model elements which were described in an ecore file.
type EcorePackage interface {
	EPackage

	// Returns the meta object for the EAnnotation
	GetEAnnotationClass() EClass

	// Returns the meta object for the Source
	GetEAnnotation_Source() EAttribute

	// Returns the meta object for the Contents
	GetEAnnotation_Contents() EReference
	// Returns the meta object for the Details
	GetEAnnotation_Details() EReference
	// Returns the meta object for the EModelElement
	GetEAnnotation_EModelElement() EReference
	// Returns the meta object for the References
	GetEAnnotation_References() EReference

	// Returns the meta object for the EAttribute
	GetEAttribute() EClass

	// Returns the meta object for the ID
	GetEAttribute_ID() EAttribute

	// Returns the meta object for the EAttributeType
	GetEAttribute_EAttributeType() EReference

	// Returns the meta object for the EClass
	GetEClass() EClass

	// Returns the meta object for the Abstract
	GetEClass_Abstract() EAttribute
	// Returns the meta object for the Interface
	GetEClass_Interface() EAttribute

	// Returns the meta object for the EAllAttributes
	GetEClass_EAllAttributes() EReference
	// Returns the meta object for the EAllContainments
	GetEClass_EAllContainments() EReference
	// Returns the meta object for the EAllOperations
	GetEClass_EAllOperations() EReference
	// Returns the meta object for the EAllReferences
	GetEClass_EAllReferences() EReference
	// Returns the meta object for the EAllStructuralFeatures
	GetEClass_EAllStructuralFeatures() EReference
	// Returns the meta object for the EAllSuperTypes
	GetEClass_EAllSuperTypes() EReference
	// Returns the meta object for the EAttributes
	GetEClass_EAttributes() EReference
	// Returns the meta object for the EContainmentFeatures
	GetEClass_EContainmentFeatures() EReference
	// Returns the meta object for the ECrossReferenceFeatures
	GetEClass_ECrossReferenceFeatures() EReference
	// Returns the meta object for the EIDAttribute
	GetEClass_EIDAttribute() EReference
	// Returns the meta object for the EOperations
	GetEClass_EOperations() EReference
	// Returns the meta object for the EReferences
	GetEClass_EReferences() EReference
	// Returns the meta object for the EStructuralFeatures
	GetEClass_EStructuralFeatures() EReference
	// Returns the meta object for the ESuperTypes
	GetEClass_ESuperTypes() EReference

	// Returns the meta object for the GetEOperation
	GetEClass_GetEOperation_EInt() EOperation
	// Returns the meta object for the GetEStructuralFeature
	GetEClass_GetEStructuralFeature_EInt() EOperation
	// Returns the meta object for the GetEStructuralFeature
	GetEClass_GetEStructuralFeature_EString() EOperation
	// Returns the meta object for the GetFeatureCount
	GetEClass_GetFeatureCount() EOperation
	// Returns the meta object for the GetFeatureID
	GetEClass_GetFeatureID_EStructuralFeature() EOperation
	// Returns the meta object for the GetFeatureType
	GetEClass_GetFeatureType_EStructuralFeature() EOperation
	// Returns the meta object for the GetOperationCount
	GetEClass_GetOperationCount() EOperation
	// Returns the meta object for the GetOperationID
	GetEClass_GetOperationID_EOperation() EOperation
	// Returns the meta object for the GetOverride
	GetEClass_GetOverride_EOperation() EOperation
	// Returns the meta object for the IsSuperTypeOf
	GetEClass_IsSuperTypeOf_EClass() EOperation

	// Returns the meta object for the EClassifier
	GetEClassifierClass() EClass

	// Returns the meta object for the ClassifierID
	GetEClassifier_ClassifierID() EAttribute
	// Returns the meta object for the DefaultValue
	GetEClassifier_DefaultValue() EAttribute
	// Returns the meta object for the InstanceClass
	GetEClassifier_InstanceClass() EAttribute
	// Returns the meta object for the InstanceTypeName
	GetEClassifier_InstanceTypeName() EAttribute

	// Returns the meta object for the EPackage
	GetEClassifier_EPackage() EReference

	// Returns the meta object for the IsInstance
	GetEClassifier_IsInstance_EJavaObject() EOperation

	// Returns the meta object for the EDataType
	GetEDataType() EClass

	// Returns the meta object for the Serializable
	GetEDataType_Serializable() EAttribute

	// Returns the meta object for the EEnum
	GetEEnum() EClass

	// Returns the meta object for the ELiterals
	GetEEnum_ELiterals() EReference

	// Returns the meta object for the GetEEnumLiteral
	GetEEnum_GetEEnumLiteral_EString() EOperation
	// Returns the meta object for the GetEEnumLiteral
	GetEEnum_GetEEnumLiteral_EInt() EOperation
	// Returns the meta object for the GetEEnumLiteralByLiteral
	GetEEnum_GetEEnumLiteralByLiteral_EString() EOperation

	// Returns the meta object for the EEnumLiteral
	GetEEnumLiteral() EClass

	// Returns the meta object for the Instance
	GetEEnumLiteral_Instance() EAttribute
	// Returns the meta object for the Literal
	GetEEnumLiteral_Literal() EAttribute
	// Returns the meta object for the Value
	GetEEnumLiteral_Value() EAttribute

	// Returns the meta object for the EEnum
	GetEEnumLiteral_EEnum() EReference

	// Returns the meta object for the EFactory
	GetEFactory() EClass

	// Returns the meta object for the EPackage
	GetEFactory_EPackage() EReference

	// Returns the meta object for the ConvertToString
	GetEFactory_ConvertToString_EDataType_EJavaObject() EOperation
	// Returns the meta object for the Create
	GetEFactory_Create_EClass() EOperation
	// Returns the meta object for the CreateFromString
	GetEFactory_CreateFromString_EDataType_EString() EOperation

	// Returns the meta object for the EGenericType
	GetEGenericType() EClass

	// Returns the meta object for the EClassifier
	GetEGenericType_EClassifier() EReference
	// Returns the meta object for the ELowerBound
	GetEGenericType_ELowerBound() EReference
	// Returns the meta object for the ERawType
	GetEGenericType_ERawType() EReference
	// Returns the meta object for the ETypeArguments
	GetEGenericType_ETypeArguments() EReference
	// Returns the meta object for the ETypeParameter
	GetEGenericType_ETypeParameter() EReference
	// Returns the meta object for the EUpperBound
	GetEGenericType_EUpperBound() EReference

	// Returns the meta object for the IsInstance
	GetEGenericType_IsInstance_EJavaObject() EOperation

	// Returns the meta object for the EModelElement
	GetEModelElement() EClass

	// Returns the meta object for the EAnnotations
	GetEModelElement_EAnnotations() EReference

	// Returns the meta object for the GetEAnnotation
	GetEModelElement_GetEAnnotation_EString() EOperation

	// Returns the meta object for the ENamedElement
	GetENamedElement() EClass

	// Returns the meta object for the Name
	GetENamedElement_Name() EAttribute

	// Returns the meta object for the EObject
	GetEObject() EClass

	// Returns the meta object for the EAllContents
	GetEObject_EAllContents() EOperation
	// Returns the meta object for the EClass
	GetEObject_EClass() EOperation
	// Returns the meta object for the EContainer
	GetEObject_EContainer() EOperation
	// Returns the meta object for the EContainingFeature
	GetEObject_EContainingFeature() EOperation
	// Returns the meta object for the EContainmentFeature
	GetEObject_EContainmentFeature() EOperation
	// Returns the meta object for the EContents
	GetEObject_EContents() EOperation
	// Returns the meta object for the ECrossReferences
	GetEObject_ECrossReferences() EOperation
	// Returns the meta object for the EGet
	GetEObject_EGet_EStructuralFeature() EOperation
	// Returns the meta object for the EGet
	GetEObject_EGet_EStructuralFeature_EBoolean() EOperation
	// Returns the meta object for the EInvoke
	GetEObject_EInvoke_EOperation_EEList() EOperation
	// Returns the meta object for the EIsProxy
	GetEObject_EIsProxy() EOperation
	// Returns the meta object for the EIsSet
	GetEObject_EIsSet_EStructuralFeature() EOperation
	// Returns the meta object for the EResource
	GetEObject_EResource() EOperation
	// Returns the meta object for the ESet
	GetEObject_ESet_EStructuralFeature_EJavaObject() EOperation
	// Returns the meta object for the EUnset
	GetEObject_EUnset_EStructuralFeature() EOperation

	// Returns the meta object for the EOperation
	GetEOperation() EClass

	// Returns the meta object for the OperationID
	GetEOperation_OperationID() EAttribute

	// Returns the meta object for the EContainingClass
	GetEOperation_EContainingClass() EReference
	// Returns the meta object for the EExceptions
	GetEOperation_EExceptions() EReference
	// Returns the meta object for the EParameters
	GetEOperation_EParameters() EReference

	// Returns the meta object for the IsOverrideOf
	GetEOperation_IsOverrideOf_EOperation() EOperation

	// Returns the meta object for the EPackage
	GetEPackage() EClass

	// Returns the meta object for the NsPrefix
	GetEPackage_NsPrefix() EAttribute
	// Returns the meta object for the NsURI
	GetEPackage_NsURI() EAttribute

	// Returns the meta object for the EClassifiers
	GetEPackage_EClassifiers() EReference
	// Returns the meta object for the EFactoryInstance
	GetEPackage_EFactoryInstance() EReference
	// Returns the meta object for the ESubPackages
	GetEPackage_ESubPackages() EReference
	// Returns the meta object for the ESuperPackage
	GetEPackage_ESuperPackage() EReference

	// Returns the meta object for the GetEClassifier
	GetEPackage_GetEClassifier_EString() EOperation

	// Returns the meta object for the EParameter
	GetEParameter() EClass

	// Returns the meta object for the EOperation
	GetEParameter_EOperation() EReference

	// Returns the meta object for the EReference
	GetEReference() EClass

	// Returns the meta object for the Container
	GetEReference_Container() EAttribute
	// Returns the meta object for the Containment
	GetEReference_Containment() EAttribute
	// Returns the meta object for the ResolveProxies
	GetEReference_ResolveProxies() EAttribute

	// Returns the meta object for the EKeys
	GetEReference_EKeys() EReference
	// Returns the meta object for the EOpposite
	GetEReference_EOpposite() EReference
	// Returns the meta object for the EReferenceType
	GetEReference_EReferenceType() EReference

	// Returns the meta object for the EStringToStringMapEntry
	GetEStringToStringMapEntry() EClass

	// Returns the meta object for the Key
	GetEStringToStringMapEntry_Key() EAttribute
	// Returns the meta object for the Value
	GetEStringToStringMapEntry_Value() EAttribute

	// Returns the meta object for the EStructuralFeature
	GetEStructuralFeature() EClass

	// Returns the meta object for the Changeable
	GetEStructuralFeature_Changeable() EAttribute
	// Returns the meta object for the DefaultValue
	GetEStructuralFeature_DefaultValue() EAttribute
	// Returns the meta object for the DefaultValueLiteral
	GetEStructuralFeature_DefaultValueLiteral() EAttribute
	// Returns the meta object for the Derived
	GetEStructuralFeature_Derived() EAttribute
	// Returns the meta object for the FeatureID
	GetEStructuralFeature_FeatureID() EAttribute
	// Returns the meta object for the Transient
	GetEStructuralFeature_Transient() EAttribute
	// Returns the meta object for the Unsettable
	GetEStructuralFeature_Unsettable() EAttribute
	// Returns the meta object for the Volatile
	GetEStructuralFeature_Volatile() EAttribute

	// Returns the meta object for the EContainingClass
	GetEStructuralFeature_EContainingClass() EReference

	// Returns the meta object for the GetContainerClass
	GetEStructuralFeature_GetContainerClass() EOperation

	// Returns the meta object for the ETypeParameter
	GetETypeParameter() EClass

	// Returns the meta object for the EBounds
	GetETypeParameter_EBounds() EReference

	// Returns the meta object for the ETypedElement
	GetETypedElement() EClass

	// Returns the meta object for the LowerBound
	GetETypedElement_LowerBound() EAttribute
	// Returns the meta object for the Many
	GetETypedElement_Many() EAttribute
	// Returns the meta object for the Ordered
	GetETypedElement_Ordered() EAttribute
	// Returns the meta object for the Required
	GetETypedElement_Required() EAttribute
	// Returns the meta object for the Unique
	GetETypedElement_Unique() EAttribute
	// Returns the meta object for the UpperBound
	GetETypedElement_UpperBound() EAttribute

	// Returns the meta object for the EType
	GetETypedElement_EType() EReference

	// Returns the meta object for the EBigDecimal
	GetEBigDecimal() EDataType
	// Returns the meta object for the EBigInteger
	GetEBigInteger() EDataType
	// Returns the meta object for the EBoolean
	GetEBoolean() EDataType
	// Returns the meta object for the EBooleanObject
	GetEBooleanObject() EDataType
	// Returns the meta object for the EByte
	GetEByte() EDataType
	// Returns the meta object for the EByteArray
	GetEByteArray() EDataType
	// Returns the meta object for the EByteObject
	GetEByteObject() EDataType
	// Returns the meta object for the EChar
	GetEChar() EDataType
	// Returns the meta object for the ECharacterObject
	GetECharacterObject() EDataType
	// Returns the meta object for the EDate
	GetEDate() EDataType
	// Returns the meta object for the EDiagnosticChain
	GetEDiagnosticChain() EDataType
	// Returns the meta object for the EDouble
	GetEDouble() EDataType
	// Returns the meta object for the EDoubleObject
	GetEDoubleObject() EDataType
	// Returns the meta object for the EEList
	GetEEList() EDataType
	// Returns the meta object for the EEnumerator
	GetEEnumerator() EDataType
	// Returns the meta object for the EFeatureMap
	GetEFeatureMap() EDataType
	// Returns the meta object for the EFeatureMapEntry
	GetEFeatureMapEntry() EDataType
	// Returns the meta object for the EFloat
	GetEFloat() EDataType
	// Returns the meta object for the EFloatObject
	GetEFloatObject() EDataType
	// Returns the meta object for the EInt
	GetEInt() EDataType
	// Returns the meta object for the EIntegerObject
	GetEIntegerObject() EDataType
	// Returns the meta object for the EInvocationTargetException
	GetEInvocationTargetException() EDataType
	// Returns the meta object for the EJavaClass
	GetEJavaClass() EDataType
	// Returns the meta object for the EJavaObject
	GetEJavaObject() EDataType
	// Returns the meta object for the ELong
	GetELong() EDataType
	// Returns the meta object for the ELongObject
	GetELongObject() EDataType
	// Returns the meta object for the EMap
	GetEMap() EDataType
	// Returns the meta object for the EResource
	GetEResource() EDataType
	// Returns the meta object for the EResourceSet
	GetEResourceSet() EDataType
	// Returns the meta object for the EShort
	GetEShort() EDataType
	// Returns the meta object for the EShortObject
	GetEShortObject() EDataType
	// Returns the meta object for the EString
	GetEString() EDataType
	// Returns the meta object for the ETreeIterator
	GetETreeIterator() EDataType
}

var packageInstance EcorePackage

func GetPackage() EcorePackage {
	if packageInstance == nil {
		packageInstance = newEcorePackageImpl()
	}
	return packageInstance
}
